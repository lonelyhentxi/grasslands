/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export const enum SassOutputStyle {
  expanded = 'expanded',
  compressed = 'compressed',
}
export const enum SassSyntax {
  idented = 'idented',
  css = 'css',
  scss = 'scss',
}
export interface SassImporterResult {
  contents: string
  sourceMapUrl?: string
  syntax: SassSyntax
}
export interface SassCanonicalizeContext {
  containingUrl?: string
  fromImport: boolean
}
export interface SassImporter {
  canonicalize?: (arg0: string, arg1?: SassCanonicalizeContext | undefined | null) => any
  load?: (arg: string) => any
  findFileUrl?: (arg0: string, arg1?: SassCanonicalizeContext | undefined | null) => any
}
export interface SassOptions {
  file?: string
  data?: string
  loadPaths?: Array<string>
  syntax?: SassSyntax
  url?: string
  importer?: Array<SassImporter>
  charset?: boolean
  sourceMap?: boolean
  sourceMapIncludeSources?: boolean
  style?: SassOutputStyle
  alertAscii?: boolean
  alertColor?: boolean
  quietDeps?: boolean
  verbose?: boolean
}
export interface SassResult {
  css: string
  loadedUrls: Array<string>
  sourceMap?: string
}
export interface SassSourceLocation {
  column: number
  line: number
  offset: number
}
export interface SassSourceSpan {
  context?: string
  end?: SassSourceLocation
  start?: SassSourceLocation
  text: string
  url?: string
}
export interface SassError {
  message: string
  name: string
  sassMessage: string
  sassStack: string
  span: SassSourceSpan
  stack?: string
  stackTraceLimit: number
}
export interface SassCompileResult {
  success?: SassResult
  failure?: SassError
}
export interface LegacySassStats {
  duration: number
  start: number
  end: number
  entry: string
  includedFiles: Array<string>
}
export interface LegacySassImportResult {
  file?: string
  contents?: string
}
export interface LegacyImporterThis {
  fromImport: boolean
}
export interface LegacySassOptions {
  includePaths?: Array<string>
  identType?: string
  identWidth?: number
  linefeed?: string
  omitSourceMapUrl?: boolean
  outFile?: string
  outputStyle?: SassOutputStyle
  sourceMap?: boolean
  sourceMapContents?: boolean
  sourceMapEmbed?: boolean
  importer?: Array<(arg0: LegacyImporterThis, arg1: string, arg2?: string | undefined | null) => any>
  charset?: boolean
  quietDeps?: boolean
  verbose?: boolean
  data?: string
  file?: string
  indentedSyntax?: boolean
}
export interface LegacySassResult {
  css: string
  stats: LegacySassStats
  map?: string
}
export interface LegacySassError {
  column?: number
  file?: string
  formatted?: string
  line?: number
  message?: string
  stack?: string
  name: string
  status: number
}
export interface LegacySassCompileResult {
  success?: LegacySassResult
  failure?: LegacySassError
}
export function compile(source: string, options?: SassOptions | undefined | null): Promise<SassCompileResult>
export function compileLegacy(
  source: string,
  options?: LegacySassOptions | undefined | null,
): Promise<LegacySassCompileResult>
